local function isTable(table) return table ~= nil and type(table) == "table" end
local function isStr(str) return str ~= nil and type(str) == "string" end
local function isStrNotEmpty(str) return isStr(str) and #str > 0 end
local localization = {}
localization.fallback = "en"
localization.language = localization.fallback
localization.supportedLanguage = localization.fallback
function localization:SetLanguage(language)
    local langId = self:GetSupportedLanguage(language)
    self.language = language or self:GetLanguage()
    self.supportedLanguage = langId
    self.strings = self:GetStrings(langId)
end

function localization:L2S(language)
    local langStrings = self["strings_" .. language]
    if langStrings then
        langStrings._LANGUAGE = language
    elseif self["strings_" .. self.fallback] then
        self["strings_" .. self.fallback]._LANGUAGE = self.fallback
    end
    return langStrings or self["strings_" .. self.fallback]
end

function localization:GetLanguage() return string.lower(LanguageTranslator and LanguageTranslator.defaultlang or self.fallback) end

function localization:GetSupportedLanguage(languageName)
    local SupportedLanguageStr = languageName or self:GetLanguage()
    if SupportedLanguageStr and type(SupportedLanguageStr) == "string" then
        SupportedLanguageStr = string.lower(SupportedLanguageStr)
        return self.languageAliasTable[SupportedLanguageStr] or self.fallback
    end
    return self.fallback
end

function localization:GetStrings(languageName)
    local langId = self:GetSupportedLanguage(languageName)
    local langStrings = self:L2S(langId)
    langStrings.GetString = function(strings, langKey, default)
        langKey = string.lower(langKey)
        return (isStrNotEmpty(strings[langKey]) and strings[langKey]) or (isStr(self.strings_en[langKey]) and self.strings_en[langKey]) or default or "N/A"
    end
    langStrings.HasString = function(strings, langKey)
        langKey = string.lower(langKey)
        return isStrNotEmpty(strings[langKey]) or isStr(self.strings_en[langKey])
    end
    langStrings.GetStrings = function(strings, langKey)
        local langStrings = isTable(strings[langKey]) and strings[langKey] or {}
        if not langStrings.GetString then langStrings.GetString = function(self, langKey, default) return self[langKey] or (isTable(self.strings_en[langKey]) and self.strings_en[langKey][langKey]) or default or "N/A" end end
        return langStrings
    end
    if not self.strings then
        self.language = languageName or self:GetLanguage()
        self.supportedLanguage = langId
        self.strings = langStrings
    end
    return langStrings
end

function localization:GetString(langKey, default)
    if not self.strings then self:GetStrings() end
    return self.strings:GetString(langKey, default)
end

function localization:HasString(langKey)
    if not self.strings then self:GetStrings() end
    return self.strings:HasString(langKey)
end

localization.strings_en = {
    version = "Version",
    other = "Other",
    prefab = "Prefab",
    health = "Health",
    hunger = "Hunger",
    sanity = "Sanity",
    work = "Work",
    freshness = "Freshness",
    eater = "Eater",
    followers = "Followers",
    leader = "Leader",
    loyalty = "Loyalty",
    domestication = "Domestication",
    obedience = "Obedience",
    tendencies_default = "Default",
    tendencies_ornery = "Ornery",
    tendencies_rider = "Rider",
    tendencies_pudgy = "Pudgy",
    tags = "Tags",
    tags_player = "player",
    tags_character = "character",
    tags_companion = "companion",
    tags_epic = "epic",
    tags_hostile = "hostile",
    tags_monster = "monster",
    tags_prey = "prey",
    tags_largecreature = "largecreature",
    tags_smallcreature = "smallcreature",
    tags_seacreature = "seacreature",
    tags_shadowcreature = "shadowcreature",
    tags_animal = "animal",
    tags_flying = "flying",
    tags_amphibious = "amphibious",
    tags_pet = "pet",
    tags_insect = "insect",
    tags_bee = "bee",
    tags_spider = "spider",
    tags_hound = "hound",
    tags_beefalo = "beefalo",
    tags_pig = "pig",
    tags_manrabbit = "manrabbit",
    tags_merm = "merm",
    tags_snake = "snake",
    tags_ant = "ant",
    tags_ghost = "ghost",
    tags_structure = "structure",
    tags_prototyper = "prototyper",
    tags_shelter = "shelter",
    tags_fridge = "fridge",
    tags_plant = "plant",
    tags_tree = "tree",
    tags_molebait = "molebait",
    tags_poisonous = "poisonous",
    tags_irreplaceable = "irreplaceable",
    edible = "Food",
    foodtypes = "foodtypes",
    foodtype_generic = "generic",
    foodtype_raw = "raw",
    foodtype_seeds = "seeds",
    foodtype_meat = "meat",
    foodtype_veggie = "veggie",
    foodtype_wood = "wood",
    foodtype_elemental = "elemental",
    foodtype_roughage = "roughage",
    foodtype_horrible = "horrible",
    foodtype_gears = "gears",
    foodtype_insect = "insect",
    foodtype_golddust = "gold dust",
    foodtags = "FoodTags",
    foodtag_dried = "dried",
    foodtag_precook = "precook",
    foodtag_veggie = "veggie",
    foodtag_seed = "seed",
    foodtag_fruit = "fruit",
    foodtag_meat = "meat",
    foodtag_monster = "monster",
    foodtag_fish = "fish",
    foodtag_egg = "egg",
    foodtag_dairy = "dairy",
    foodtag_fat = "fat",
    foodtag_decoration = "decoration",
    foodtag_inedible = "inedible",
    foodtag_frozen = "frozen",
    foodtag_sweetener = "sweetener",
    foodtag_bug = "bug",
    foodtag_jellyfish = "jellyfish",
    foodtag_bone = "bone",
    foodtag_filter = "filter",
    foodtag_antihistamine = "antihistamine",
    fresh = "Fresh",
    stale = "Stale",
    spoiled = "Spoiled",
    ingredients = "Ingredients",
    ingredients2 = "ingredients",
    ingredientof = "IngredientOf",
    products = "products",
    weapon = "Weapon",
    explosive = "Explosive",
    buildingdamage = "BldgDmg",
    damage = "Damage",
    range = "Range",
    armor = "Armor",
    absorbpercent = "Abs",
    damagereduction = "DamageReduction",
    uses = "Uses",
    inventory = "Inventory",
    container = "Container",
    equipslot = "EquipSlot",
    attackspeed = "AttackSpeed",
    acceleration = "Acc",
    speed = "Speed",
    walkspeed = "WalkSpeed",
    runspeed = "RunSpeed",
    equipslot_hands = "hands",
    equipslot_head = "head",
    equipslot_body = "body",
    equipslot_back = "back",
    equipslot_neck = "neck",
    equipslot_pack = "pack",
    equipslot_necklace = "necklace",
    equipslot_backpack = "backpack",
    equipslot_amulet = "amulet",
    equipslot_chest = "chest",
    equipslot_waist = "waist",
    equipslot_feet = "feet",
    equipslot_sail = "sail",
    equipslot_lamp = "lamp",
    workable = "Workable",
    tool = "Tool",
    tool_actions = "actions",
    fuel = "Fuel",
    fuel_burnable = "burnable",
    fuel_magic = "magic",
    fuel_nightmare = "nightmare",
    fuel_usage = "usage",
    fuel_chemical = "chemical",
    fuel_cave = "cave",
    fuel_spiderhat = "spider hat",
    fuel_molehat = "mole hat",
    fuel_onemanband = "one man band",
    fuel_pigtorch = "pig torch",
    fuel_mechanical = "mechanical",
    fuel_tar = "tar",
    fuel_cork = "cork",
    fuel_none = "none",
    repairable = "Repairable",
    repairer = "Repairer",
    repairmaterial_hay = "hay",
    repairmaterial_wood = "wood",
    repairmaterial_stone = "stone",
    repairmaterial_thulecite = "thulecite",
    repairmaterial_gears = "gears",
    repairmaterial_gem = "gem",
    repairmaterial_ice = "ice",
    repairmaterial_boat = "boat",
    repairmaterial_orp = "orp",
    repairmaterial_sandbagsmall = "small sand bag",
    speedboost_caffeine = "Caffeine",
    speedboost_wx_charge = "WX-78Charge",
    speedboost_driver = "Vehicle",
    speedboost_sail = "Sail",
    speedboost_surf = "Surf",
    speedboost_poison = "Poison",
    speedboost_autodry = "AutoDry",
    speedboost_ink = "Ink",
    speedboost_trawl = "Trawl",
    mount = "Mount",
    vehicle = "Vehicle",
    heat = "Heat",
    temperature = "Temperature",
    appeasement = "Appeasement",
    naughtyvalue = "NaughtyValue",
    sewing = "Sewing",
    attackdamage = "AtkDmg",
    heal = "Heal",
    unlock = "Unlock",
    contains = "Contains",
    items = "items",
    leaking = "leaking",
    cooldown = "Cooldown",
    done = "DONE",
    regen = "Regen",
    release = "Release",
    occupied = "OCCUPIED",
    empty = "EMPTY",
    waterproofer = "Waterproofer",
    insulator = "Insulator",
    dapperness = "Dapperness",
    tradable = "Tradable",
    goldvalue = "GoldValue",
    burnable = "Burnable",
    propagator = "Propagator",
    pickable = "Pickable",
    hatchable = "Hatchable",
    growable = "Growable",
    crop = "Crop",
    harvest = "Harvest",
    stewproduct = "StewProduct",
    dryproduct = "DryProduct",
    cookproduct = "CookProduct",
    pickproduct = "PickProduct",
    hackproduct = "HackProduct",
    shearproduct = "ShearProduct",
    spawner = "Spawner",
    sail = "Sail",
    rarity = "Rarity",
    common = "Common",
    uncommon = "Uncommon",
    rare = "Rare",
    unique = "Unique",
    legendary = "Legendary",
    moonphase = "Moon Phase",
    season = "Season",
    world_forest = "Forest",
    world_cave = "Cave",
    world_shipwrecked = "ShipWrecked",
    world_volcanolevel = "Volcano",
    world_porkland = "Porkland",
    timer_day = "d",
    timer_hour = "h",
    timer_minute = "m",
    timer_second = "s",
    fullmoontimer = "%s until full moon comes.",
    fullmoontimer2 = "Full moon is comming tonight!",
    nightmareclock = "Nightmare Clock",
    nightmareclocktimer = "%s until next phase!",
    nightmareclock_calm = "CALM",
    nightmareclock_warn = "WARNING",
    nightmareclock_nightmare = "NIGHTMARE",
    nightmareclock_dawn = "DAWN",
    houndtimer = "%s hounds are coming in %s.",
    houndtimer2 = "Hounds are attacking! %s left. Next in %s.",
    battimer = "%s bats are coming in %s.",
    quaketimer = "Earthquake is coming in %s",
    volcanotimer = "Volcano will erupt in %s.",
    periodicthreat_wait = "WAITING",
    periodicthreat_warn = "WARNING",
    periodicthreat_event = "EVENT",
    timer_waiting = "WAIT",
    timer_warning = "WARN",
    timer_ready = "READY",
    watcher_bloodmoon1 = "Blood moon falls!",
    watcher_bloodmoon2 = "Blood moon ends.",
    watcher_nightmareclock1 = "Nightmare creatures are coming in %s",
    watcher_nightmareclock2 = "WARNING: Nightmare creature attack starts!",
    watcher_nightmareclock3 = "Nightmare creature attack stops.",
    watcher_houndattack = "WARNING: Hound attack starts!",
    watcher_batattack = "WARNING: Bat attack starts!",
    watcher_volcano = "WARNING: The volcano is erupting!",
    watcher_hassler = "WARNING: The %s is approaching!",
    watcher_hasslerskipped = "%s attack skipped.",
}
localization.strings_chs = {
    modicon = "preview_chs.tex",
    modiconatlas = "preview_chs.xml",
    longdesnospace = "false",
    version = "版本",
    modname = " 全能信息面板",
    moddes = "全能的信息面板!",
    modcfg_hovertext = "悬停文本",
    modcfg_hovertext_hover = "鼠标悬停在物体上时显示原版的悬停文本？（建议关闭！免得和信息面板叠加）",
    modcfg_infopanelpos = "信息面板位置",
    modcfg_infopanelpos_hover = "跟随物体？还是固定位置？",
    modcfg_infopanelpos_auto_hover = "连接手柄时显示在左下角，否则跟随物体。",
    modcfg_infopanelfs = "信息面板字体",
    modcfg_infopanelopacity = "面板不透明度",
    modcfg_prefab = "显示预设名",
    modcfg_prefab_hover = "信息面板里显示物体预设名？（俗称控制台代码）",
    modcfg_tags = "显示标签",
    modcfg_tags_hover = "信息面板里显示物体标签？",
    modcfg_recipe = "显示配方",
    modcfg_recipe_hover = "信息面板里显示物体配方原料的信息？",
    modcfg_content = "面板内容",
    modcfg_content_hover = "信息面板应该显示得多详细？",
    modcfg_content_detailed_hover = "当然是尽可能的详细啦！",
    modcfg_content_concise_hover = "只显示几个最常用的。（例如生命值、武器、食物）",
    modcfg_notifications = "警告通知",
    modcfg_notifications_hover = "是否显示警告通知横幅？（例如火山爆发）",
    modcfg_language = "语言",
    modcfg_options_on = "开启",
    modcfg_options_off = "关闭",
    modcfg_options_auto = "自动",
    modcfg_options_normal = "一般",
    modcfg_options_small = "小",
    modcfg_options_verysmall = "很小",
    modcfg_options_large = "大",
    modcfg_options_verylarge = "很大",
    modcfg_options_followobject = "跟随物体",
    modcfg_options_topleft = "左上方",
    modcfg_options_bottomleft = "左下方",
    modcfg_options_topright = "右上方",
    modcfg_options_bottomright = "右下方",
    modcfg_options_detailed = "详细",
    modcfg_options_concise = "精简",
    other = "其他",
    prefab = "预设名",
    health = "生命",
    hunger = "饥饿",
    sanity = "精神",
    work = "工",
    freshness = "鲜度",
    eater = "吃货",
    followers = "随从",
    leader = "主人",
    loyalty = "忠诚度",
    domestication = "驯化值",
    obedience = "顺从值",
    tendencies_default = "原始",
    tendencies_ornery = "战斗",
    tendencies_rider = "骑行",
    tendencies_pudgy = "宠物",
    tags = "标签",
    tags_player = "玩家",
    tags_character = "角色",
    tags_companion = "伴侣",
    tags_epic = "史诗",
    tags_hostile = "敌对",
    tags_monster = "怪物",
    tags_prey = "猎物",
    tags_largecreature = "大型生物",
    tags_smallcreature = "小型生物",
    tags_seacreature = "海洋生物",
    tags_shadowcreature = "暗影生物",
    tags_animal = "动物",
    tags_flying = "飞行",
    tags_amphibious = "两栖",
    tags_pet = "宠物",
    tags_insect = "昆虫",
    tags_bee = "蜜蜂",
    tags_spider = "蜘蛛",
    tags_hound = "猎犬",
    tags_beefalo = "皮弗娄牛",
    tags_pig = "猪",
    tags_manrabbit = "兔人",
    tags_merm = "鱼人",
    tags_snake = "蛇",
    tags_ant = "蚂蚁",
    tags_ghost = "幽灵",
    tags_structure = "建筑",
    tags_prototyper = "原型机",
    tags_shelter = "遮蔽物",
    tags_fridge = "冰箱",
    tags_plant = "植物",
    tags_tree = "树",
    tags_molebait = "鼹鼠诱饵",
    tags_poisonous = "有毒",
    tags_irreplaceable = "唯一",
    edible = "食物",
    foodtypes = "种食物",
    foodtype_generic = "一般",
    foodtype_raw = "生鲜",
    foodtype_seeds = "种子",
    foodtype_meat = "肉类",
    foodtype_veggie = "蔬菜",
    foodtype_wood = "木头",
    foodtype_elemental = "元素",
    foodtype_roughage = "饲料",
    foodtype_horrible = "恐怖",
    foodtype_gears = "齿轮",
    foodtype_insect = "昆虫",
    foodtype_golddust = "金粉",
    foodtags = "食物标签",
    foodtag_dried = "干燥",
    foodtag_precook = "预烹饪",
    foodtag_veggie = "蔬菜",
    foodtag_seed = "种子",
    foodtag_fruit = "水果",
    foodtag_meat = "肉类",
    foodtag_monster = "怪物",
    foodtag_fish = "鱼",
    foodtag_egg = "蛋",
    foodtag_dairy = "乳品",
    foodtag_fat = "脂肪",
    foodtag_decoration = "装饰",
    foodtag_inedible = "不可食用",
    foodtag_frozen = "冷冻",
    foodtag_sweetener = "甜味剂",
    foodtag_bug = "昆虫",
    foodtag_jellyfish = "水母",
    foodtag_bone = "骨头",
    foodtag_filter = "过滤",
    foodtag_antihistamine = "抗组胺",
    fresh = "新鲜",
    stale = "陈腐",
    spoiled = "变质",
    ingredients = "配方",
    ingredients2 = "种原料",
    ingredientof = "可制作",
    products = "种物品",
    weapon = "武器",
    explosive = "爆炸物",
    buildingdamage = "建筑伤害",
    damage = "伤害",
    range = "范围",
    armor = "护甲",
    absorbpercent = "吸收",
    damagereduction = "伤害减免",
    uses = "耐久",
    inventory = "物品栏",
    container = "容器",
    equipslot = "装备槽",
    attackspeed = "攻击速度",
    acceleration = "加速",
    speed = "速度",
    walkspeed = "步行速度",
    runspeed = "奔跑速度",
    equipslot_hands = "手部",
    equipslot_head = "头部",
    equipslot_body = "身体",
    equipslot_back = "背部",
    equipslot_neck = "脖子",
    equipslot_pack = "背包",
    equipslot_necklace = "项链",
    equipslot_backpack = "背包",
    equipslot_amulet = "护符",
    equipslot_chest = "胸部",
    equipslot_waist = "腰部",
    equipslot_feet = "脚部",
    equipslot_sail = "船帆",
    equipslot_lamp = "船灯",
    workable = "可破坏",
    tool = "工具",
    tool_actions = "种动作",
    fuel = "燃料",
    fuel_burnable = "可燃物",
    fuel_magic = "魔法",
    fuel_nightmare = "噩梦",
    fuel_usage = "使用",
    fuel_chemical = "化学",
    fuel_cave = "洞穴",
    fuel_spiderhat = "蜘蛛帽",
    fuel_molehat = "鼹鼠帽",
    fuel_onemanband = "独奏乐队",
    fuel_pigtorch = "猪人火炬",
    fuel_mechanical = "机械",
    fuel_tar = "沥青",
    fuel_cork = "软木",
    fuel_none = "无",
    repairable = "可修理",
    repairer = "修理物",
    repairmaterial_hay = "干草",
    repairmaterial_wood = "木头",
    repairmaterial_stone = "石头",
    repairmaterial_thulecite = "铥矿",
    repairmaterial_gears = "齿轮",
    repairmaterial_gem = "宝石",
    repairmaterial_ice = "冰",
    repairmaterial_boat = "船",
    repairmaterial_orp = "铁",
    repairmaterial_sandbagsmall = "小沙袋",
    speedboost_caffeine = "咖啡因",
    speedboost_wx_charge = "WX-78充能",
    speedboost_driver = "载具",
    speedboost_sail = "船帆",
    speedboost_surf = "冲浪",
    speedboost_poison = "中毒",
    speedboost_autodry = "干燥",
    speedboost_ink = "墨水",
    speedboost_trawl = "拖网",
    mount = "坐骑",
    vehicle = "载具",
    heat = "热量",
    temperature = "温度",
    appeasement = "火山献祭",
    naughtyvalue = "淘气值",
    sewing = "缝补物",
    attackdamage = "攻击力",
    heal = "治疗",
    unlock = "解锁",
    contains = "包含",
    items = "个物品",
    leaking = "漏水中",
    cooldown = "冷却",
    done = "完毕",
    regen = "再生",
    release = "放出",
    occupied = "占据",
    empty = "空",
    waterproofer = "防水材料",
    insulator = "隔热材质",
    dapperness = "精神恢复",
    tradable = "交易物",
    goldvalue = "黄金价值",
    burnable = "可燃",
    propagator = "火势蔓延",
    pickable = "可采摘",
    hatchable = "可孵化",
    growable = "可生长",
    crop = "庄稼",
    harvest = "收获",
    stewproduct = "炖煮中",
    dryproduct = "晾干获得",
    cookproduct = "烹饪获得",
    pickproduct = "采摘获得",
    hackproduct = "砍劈获得",
    shearproduct = "剪切获得",
    spawner = "巢穴",
    sail = "船帆",
    rarity = "稀有度",
    common = "普通",
    uncommon = "高级",
    rare = "罕见",
    unique = "神级",
    legendary = "传奇",
    moonphase = "月相",
    season = "季节",
    world_forest = "森林",
    world_cave = "洞穴",
    world_shipwrecked = "海难",
    world_volcanolevel = "火山",
    world_porkland = "猪镇",
    timer_day = "天",
    timer_hour = "小时",
    timer_minute = "分",
    timer_second = "秒",
    fullmoontimer = "距离满月还有%s。",
    fullmoontimer2 = "今夜是满月！",
    nightmareclock = "噩梦时钟",
    nightmareclocktimer = "距离下个阶段还有%s！",
    nightmareclock_calm = "平静",
    nightmareclock_warn = "警告",
    nightmareclock_nightmare = "噩梦",
    nightmareclock_dawn = "黎明",
    houndtimer = "%s只猎犬将在%s后抵达。",
    houndtimer2 = "猎犬正在进攻！剩余%s只。距离下一个%s。",
    battimer = "%s只蝙蝠将在%s后抵达。",
    quaketimer = "地震将在%s后发生。",
    volcanotimer = "火山将在%s后爆发。",
    periodicthreat_wait = "等待",
    periodicthreat_warn = "警告",
    periodicthreat_event = "事件",
    timer_waiting = "等待中",
    timer_warning = "警告",
    timer_ready = "就位",
    watcher_bloodmoon1 = "血月降临！",
    watcher_bloodmoon2 = "血月结束。",
    watcher_nightmareclock1 = "噩梦生物将在%s后到来！",
    watcher_nightmareclock2 = "警告：噩梦暴动开始！",
    watcher_nightmareclock3 = "噩梦暴动停止。",
    watcher_houndattack = "警告：猎犬攻击开始！！！",
    watcher_batattack = "警告：蝙蝠攻击开始！！！",
    watcher_volcano = "警告：火山爆发！！！",
    watcher_hassler = "警告：%s正在接近！！！",
    watcher_hasslerskipped = "%s攻击跳过了。",
}
localization.languageAliasTable = {
    en = "en",
    english = "en",
    chs = "chs",
    cn = "chs",
    sc = "chs",
    zh = "chs",
    zhr = "chs",
    chinese = "chs",
    simplifiedchinese = "chs",
    cht = "cht",
    tw = "cht",
    traditionalchinese = "cht",
}
return localization
